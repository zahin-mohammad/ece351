
Begin program: 
Entity/Architecture pair: OR_gate
entity OR_gate is
	Input Pins: [x, y]
	Output Pins: [z]
end OR_gate
architecture OR_gate_arch of OR_gate is
	Signals: []
begin
	Components: []
	List of Statements: [
	process ( [x, y] ) 
	begin
	[
		if ( ( x=0 and y=0 ) ) then
			[
			z <= 0]
		else 
			[
			z <= 1]
		end if]
	end process]
end OR_gate_arch

Entity/Architecture pair: four_port_OR_gate
entity four_port_OR_gate is
	Input Pins: [a, b, c, d]
	Output Pins: [result]
end four_port_OR_gate
architecture four_port_structure of four_port_OR_gate is
	Signals: [e, f]
begin
	Components: [
	OR1 : entity work.OR_gate port map( [a, b, e] ), 
	OR2 : entity work.OR_gate port map( [c, d, f] )]
	List of Statements: [
	process ( [e, f] ) 
	begin
	[
			result <= ( e or f )]
	end process]
end four_port_structure

Entity/Architecture pair: eight_port_OR_gate
entity eight_port_OR_gate is
	Input Pins: [x0, x1, x2, x3, x4, x5, x6, x7]
	Output Pins: [y]
end eight_port_OR_gate
architecture eight_port_structure of eight_port_OR_gate is
	Signals: [result1, result2]
begin
	Components: [
	OR1 : entity work.four_port_OR_gate port map( [x0, x1, x2, x3, result1] ), 
	OR2 : entity work.four_port_OR_gate port map( [x4, x5, x6, x7, result2] )]
	List of Statements: [
	process ( [result1, result2] ) 
	begin
	[
			y <= ( result1 or result2 )]
	end process]
end eight_port_structure


